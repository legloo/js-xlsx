<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>merge more xlsx</title>
    <link rel="stylesheet" href="http://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <script src="http://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"></script>
    <script src="http://cdn.bootcss.com/vue/2.2.4/vue.min.js"></script>
    <script src="http://oss.sheetjs.com/js-xlsx/xlsx.full.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        html {
            height: 100%;
            width: 100%;
        }

        body {
            font-family: "微软雅黑";
            min-height: 95%;
            width: 100%;
        }

        .nav-bar {
            padding-top: 20px;
            padding-left: 20px;
            padding-right: 20px;
        }

        button i.glyphicon {
            margin-right: 4px;
        }

        table.table th {
            word-break: keep-all;
            white-space: nowrap;
        }
    </style>
</head>

<body>
    <div class="oneexle">
        <input type="file" id="FileInput" hidden="hidden" style="display: none;" onchange="readfls(this.files)" />
        <div id="app">
            <div class="nav-bar">
                <div class="btn-toolbar" role="toolbar">
                    <div class="input-group" style="width: 451px;" onclick="$('#FileInput')[0].click()">
                        <span class="input-group-btn">
                            <button class="btn btn-info" type="button">
                                <i class="glyphicon glyphicon-folder-open"></i>选择文件</button>
                        </span>
                        <input type="text" class="form-control" placeholder="请选择文件" readonly="readonly" v-model="fileInfo.name">
                    </div>
                    <div class="input-group" style="width: 151px;">
                        <span class="input-group-btn" style="font-size: 10px;line-height: 30px;">
                            {{'文件大小:'+fileInfo.size+'b'}}
                        </span>
                    </div>
                </div>
            </div>
            <div id="demo" style="overflow: auto;" v-if="tableDemo.tbody.length>0">
                <table class="table table-bordered" style="min-width: 100%;">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th v-for="i in tableDemo.thead">
                                {{i}}
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(i,index) in tableDemo.tbody">
                            <th scope="row">{{index}}</th>
                            <td v-for="j in tableDemo.thead">{{i[j]}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>


    <div class="twoexle">
        <input type="file" id="FileInputtwo" hidden="hidden" style="display: none;" onchange="readflstwo(this.files)" />
        <div id="apptwo">
            <div class="nav-bar">
                <div class="btn-toolbar" role="toolbar">
                    <div class="input-group" style="width: 451px;" onclick="$('#FileInputtwo')[0].click()">
                        <span class="input-group-btn">
                            <button class="btn btn-info" type="button">
                                <i class="glyphicon glyphicon-folder-open"></i>选择文件</button>
                        </span>
                        <input type="text" class="form-control" placeholder="请选择文件" readonly="readonly" v-model="fileInfo.name">
                    </div>
                    <div class="input-group" style="width: 151px;">
                        <span class="input-group-btn" style="font-size: 10px;line-height: 30px;">
                            {{'文件大小two:'+fileInfo.size+'b'}}
                        </span>
                    </div>
                </div>
            </div>
            <div id="demo" style="overflow: auto;" v-if="tableDemo.tbody.length>0">
                <table class="table table-bordered" style="min-width: 100%;">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th v-for="i in tableDemo.thead">
                                {{i}}
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(i,index) in tableDemo.tbody">
                            <th scope="row">{{index}}</th>
                            <td v-for="j in tableDemo.thead">{{i[j]}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        var a;
        var ImportFile = null;
        function readfls(fls) {
            if (fls && fls.length > 0) {
                ImportFile = fls[0];
                var fileX = ImportFile.name.split(".").reverse()[0];
                var fileXyes = false;
                ["xlsx", "xlc", "xlm", "xls", "xlt", "xlw", "csv"].forEach(function (value, index, array) {
                    if (fileX === value) {
                        fileXyes = true;
                    }
                });
                if (fileXyes) {
                    app.fileInfo.name = ImportFile.name;
                    app.fileInfo.size = ImportFile.size;
                    var obj = [];
                    file2Xce(ImportFile).then(function (t) {
                        a = t;
                        // console.log(a);
                        if (t && t.length > 0) {
                            var tmpHead = [];
                            var pmodel = {};
                            for (var itm in t[0]) {
                                tmpHead.push(itm);
                                pmodel[itm] = itm;
                            }
                            app.tableDemo.thead = tmpHead;
                            app.tableDemo.tbody = t;
                        }
                    });
                } else {
                    alert("格式错误！请重新选择");
                }
            }
        }
        var wb; //读取完成的数据　
        function file2Xce(f) {
            return new Promise(function (resolve, reject) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var data = e.target.result;
                    if (app.rABS) {
                        wb = XLSX.read(btoa(fixdata(data)), { //手动转化
                            type: 'base64'
                        });
                    } else {
                        wb = XLSX.read(data, {
                            type: 'binary'
                        });
                    }
                    resolve(XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]));
                };
                if (app.rABS) {
                    reader.readAsArrayBuffer(f);
                } else {
                    reader.readAsBinaryString(f);
                }
            });
        };

        function fixdata(data) { //文件流转BinaryString
            var o = "",
                l = 0,
                w = 10240;
            for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
            o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
            return o;
        }


        var app = new Vue({
            el: "#app",
            data: {
                rABS: false, //是否将文件读取为二进制字符串
                fileInfo: {
                    name: "",
                    size: 0
                },
                tableDemo: {
                    thead: [],
                    tbody: []
                }
            }
        });
    </script>



    <script>
        var b;
        var ImportFile = null;
        function readflstwo(fls) {
            if (fls && fls.length > 0) {
                ImportFile = fls[0];
                var fileX = ImportFile.name.split(".").reverse()[0];
                var fileXyes = false;
                ["xlsx", "xlc", "xlm", "xls", "xlt", "xlw", "csv"].forEach(function (value, index, array) {
                    if (fileX === value) {
                        fileXyes = true;
                    }
                });
                if (fileXyes) {
                    apptwo.fileInfo.name = ImportFile.name;
                    apptwo.fileInfo.size = ImportFile.size;
                    var obj = [];
                    file2Xce(ImportFile).then(function (t) {
                        b = t;
                        // console.log(a);
                        // console.log(b);
                        var aa = [];//a.map(x => x.Username);
                        for (var i = 0; i < a.length; i++) {
                            aa.push(a[i].Username);
                        };
                        var aaa = [];
                        for (var i = 0; i < aa.length; i++) {
                            aaa.push(aa[i].slice(0, 11));
                        };

                        var bb = [];// b.map(x => x.Userphone);
                        for (var i = 0; i < b.length; i++) {
                            bb.push(b[i].Userphone);
                        };
                        var numarr = [];
                        for (var i = 0; i < bb.length; i++) {
                            let indexnum = aaa.indexOf(bb[i]);
                            if (indexnum >= 0) {
                                a[indexnum].Shopname = b[i].Shopname;
                                a[indexnum].Area = b[i].Area;
                                a[indexnum].Nickname = b[i].Username;
                                a[indexnum].Userphone = b[i].Userphone;
                                a[indexnum].Address = b[i].Address;
                                a[indexnum].Coords = b[i].Coords;
                            };
                            numarr.push(indexnum);
                        }

                        if (t && t.length > 0) {
                            var tmpHead = [];
                            var pmodel = {};
                            for (var itm in t[0]) {
                                tmpHead.push(itm);
                                pmodel[itm] = itm;
                            }
                            apptwo.tableDemo.thead = tmpHead;
                            apptwo.tableDemo.tbody = t;
                        }
                    });
                } else {
                    alert("格式错误！请重新选择");
                }
            }
        }
        var wb; //读取完成的数据　
        function file2Xce(f) {
            return new Promise(function (resolve, reject) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var data = e.target.result;
                    if (app.rABS) {
                        wb = XLSX.read(btoa(fixdata(data)), { //手动转化
                            type: 'base64'
                        });
                    } else {
                        wb = XLSX.read(data, {
                            type: 'binary'
                        });
                    }
                    resolve(XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]));
                };
                if (app.rABS) {
                    reader.readAsArrayBuffer(f);
                } else {
                    reader.readAsBinaryString(f);
                }
            });
        };

        function fixdata(data) { //文件流转BinaryString
            var o = "",
                l = 0,
                w = 10240;
            for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
            o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
            return o;
        }


        var apptwo = new Vue({
            el: "#apptwo",
            data: {
                rABS: false, //是否将文件读取为二进制字符串
                fileInfo: {
                    name: "",
                    size: 0
                },
                tableDemo: {
                    thead: [],
                    tbody: []
                }
            }
        });
    </script>
</body>

</html>
